<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Ranalytics.vn - Từ phân tích đến quyết định</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Ranalytics.vn - Từ phân tích đến quyết định</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sử dụng hàm select trong dplyr</title>
      <link>/blog/2019/02/25/2019-02-05-su-dung-select-trong-dplyr/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/02/25/2019-02-05-su-dung-select-trong-dplyr/</guid>
      <description>Select thông thườngNhư các bạn đã biết để lấy dữ liệu theo biến (cột), thông thường chúng ta sẽ sử dụng hàm select() với cấu trúc như sau select(tên biến) hoặc select(số thứ tự của biến).
Ví dụ sử dụng dữ liệu iris có sẵn trong R
library(dplyr) # package sử dụng# Các biến có trong data irisiris %&amp;gt;% names## [1] &amp;quot;Sepal.Length&amp;quot; &amp;quot;Sepal.Width&amp;quot; &amp;quot;Petal.Length&amp;quot; &amp;quot;Petal.Width&amp;quot; ## [5] &amp;quot;Species&amp;quot;Dữ liệu này có 5 biến với thứ tự lần lượt như trên.</description>
    </item>
    
    <item>
      <title>Làm sạch môi trường làm việc hiệu quả trong R</title>
      <link>/blog/2019/01/25/2019-01-25-lam-sach-moi-truong-lam-viec-hieu-qua-trong-r/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/01/25/2019-01-25-lam-sach-moi-truong-lam-viec-hieu-qua-trong-r/</guid>
      <description>Trong quá trình phân tích dữ liệu, ta thường xuyên phải tạo ra nhiều bảng tạm, biến đổi dữ liệu qua nhiều bước và cùng lúc làm việc với nhiều bảng khác nhau. Trong flow phân tích thông thường, ta sẽ phải tạo ra 1 bảng master chứa tất cả dữ liệu cần làm việc và phân tích dữ liệu từ trên tập dữ liệu đã được làm sạch đó.</description>
    </item>
    
    <item>
      <title>Xử lý dữ liệu missing</title>
      <link>/blog/2019/01/15/2019-01-15-xu-ly-du-lieu-missing/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/01/15/2019-01-15-xu-ly-du-lieu-missing/</guid>
      <description>Trong quá trình xử lý, làm sạch dữ liệu, chúng ta sẽ thường gặp phải vấn đề dữ liệu bị missing. Nguyên nhân có thể do dữ liệu không đầy đủ hoặc có sai sót trong quá trình nhập liệu… Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn một số mẹo để xử lý giá trị missing (missing values) trong R.
Vậy, làm thế nào để xử lý missing values?</description>
    </item>
    
    <item>
      <title>Vẽ biểu đồ lollipop chart</title>
      <link>/blog/2019/01/10/2019-01-10-ve-bieu-do-lollipop-voi-ggplot2/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/01/10/2019-01-10-ve-bieu-do-lollipop-voi-ggplot2/</guid>
      <description>Trong trực quan hóa dữ liệu, lollipop chart tuy không phải là một trong những biểu đồ phổ biến nhưng lại rất hiệu quả khi muốn thể hiện sự dịch thay đổi của một chỉ số giữa hai điểm thời gian. Trong bài viết này, RAnalytics sẽ hướng dẫn các bạn cách xây dựng biểu đồ lollipop chart với ggplot2.
# Load librarylibrary(tidyverse)library(gapminder)Để xây dựng biểu đồ, ta sử dụng dữ liệu gapminder từ tập dữ liệu gapminder.</description>
    </item>
    
    <item>
      <title>Biến đổi dữ liệu nhanh với mutate</title>
      <link>/blog/2018/12/30/2018-12-30-bien-doi-nhanh-voi-mutate/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/12/30/2018-12-30-bien-doi-nhanh-voi-mutate/</guid>
      <description>Trong quá trình phân tích dữ liệu sẽ có thể phát sinh việc chúng ta muốn tạo thêm những biến mới - phái sinh từ những biến sẵn có trong dữ liệu. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn cách sử dụng hàm mutate() và nhóm hàm mutate_if(), mutate_at(), mutate_all() để thêm 1 hoặc nhiều biến vào tập dữ liệu.
Sử dụng dữ liệu iris có sẵn trong R.</description>
    </item>
    
    <item>
      <title>Hiển thị bảng hiệu quả trong rmarkdown</title>
      <link>/blog/2018/12/20/2018-12-20-hien-thi-bang-hieu-qua-trong-rmarkdown/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/12/20/2018-12-20-hien-thi-bang-hieu-qua-trong-rmarkdown/</guid>
      <description>Khi phân tích dữ liệu, ta thường xuyên phải hiển thị dữ liệu dưới dạng bảng. Dữ liệu loại này có thể là dữ liệu chưa qua xử lý (dữ liệu thô) hoặc dữ liệu đã được tổng hợp và cần thể hiện để đơn vị kinh doanh có thể theo dõi.
Trong bài viết này, RAnalytics sẽ hướng dẫn các bạn hai cách thể hiện dữ liệu dạng bảng 1 cách hiệu quả trong rmarkdown với kable và DT::datatable</description>
    </item>
    
    <item>
      <title>Hướng dẫn sử dụng case_when trong dplyr</title>
      <link>/blog/2018/12/10/2018-12-10-su-dung-case-when/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/12/10/2018-12-10-su-dung-case-when/</guid>
      <description>Thông thường trong quá trình phân tích dữ liệu, chúng ta sẽ gặp phải vấn đề liên quan đến chất lượng dữ liệu. Do vậy, việc trước tiên chúng ta cần phải làm đó là xử lý, làm sạch dữ liệu. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn sử dụng một trong những hàm rất phổ biến và hữu dụng trong việc xử lý dữ liệu trong R - hàm case_when().</description>
    </item>
    
    <item>
      <title>Import và Export dữ liệu SPSS, SAS, STATA vào R</title>
      <link>/blog/2018/11/30/2018-11-30-import_export-sas-spss-stata-voi-r/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/11/30/2018-11-30-import_export-sas-spss-stata-voi-r/</guid>
      <description>Hiện nay, ngày càng nhiều các bạn dịch chuyển từ việc sử dụng Stata, SPSS hay SAS sang R. Tuy nhiên, khi chuyển sang công cụ mới, ta thường vẫn muốn tiếp tục sử dụng dữ liệu trên các phần mềm trước đây từng sử dụng. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn cách import và export dữ liệu từ SAS, SPSS hoặc Stata vào R.</description>
    </item>
    
    <item>
      <title>Import và Export dữ liệu từ Excel vào R</title>
      <link>/blog/2018/11/20/2018-11-20-import_export-excel_voi_r/</link>
      <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/11/20/2018-11-20-import_export-excel_voi_r/</guid>
      <description>Để có thể thực hiện phân tích dữ liệu, trước tiên chúng ta cần phải có dữ liệu, mà dữ liệu có thể có từ nhiều nguồn khác nhau và được lưu trữ dưới các định dạng file khác nhau như .txt, .csv, .xlsx, hay database… Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn cách import và export dữ liệu từ file Excel vào R.
Excel to RĐể import file Excel vào R, chúng ta có thể sử dụng package readxl.</description>
    </item>
    
    <item>
      <title>Tạo bản đồ với ggplot2</title>
      <link>/blog/2018/11/01/2018-11-01-tao-ban-do-voi-ggplot2/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/11/01/2018-11-01-tao-ban-do-voi-ggplot2/</guid>
      <description>Giới thiệuKhi phân tích dữ liệu, xây dựng bản đồ là một trong những công cụ rất mạnh giúp cho việc trực quan hóa, đặc biệt trong lĩnh vực kinh doanh, marketing. Việc xây dựng bản đồ giúp truyền tài kết quả phân tích một cách nhanh chóng và hiệu quả.
Với cách làm truyền thống, việc xây dựng bản đồ là không hề dễ dàng. Các packages như sp, sf hay tmap đều rất mạnh trong vẽ biểu đồ.</description>
    </item>
    
    <item>
      <title>Tạo wordcloud với ggplot2</title>
      <link>/blog/2018/10/01/2018-10-01-tao-wordcloud-voi-ggplot2/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/10/01/2018-10-01-tao-wordcloud-voi-ggplot2/</guid>
      <description>Khi phân tích dữ liệu, một trong những định dang dữ liệu chúng ta thường xuyên phải sử dụng là định dạng text. Với loại dữ liệu này, một trong những cách để trực quan hóa hiệu quả là sử dụng wordcloud. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn tạo wordcloud nhanh chóng theo phong cách của tidyverse với package ggwordcloud - một package mới trong hệ sinh thái của R.</description>
    </item>
    
    <item>
      <title>Vẽ biểu đồ boxplot hiệu quả với GGPLOT2</title>
      <link>/blog/2018/09/14/2018-09-16-tips-ggplot2/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/09/14/2018-09-16-tips-ggplot2/</guid>
      <description>Trong quá trình phân tích dữ liệu, ngoài việc đưa ra những con số thống kê “khô khan” chúng ta cần phải minh họa những con số bằng những hình vẽ hoặc biểu đồ để thu hút người đọc khi trình bày với đơn vị kinh doanh hay đối tác.
Như các bạn đã biết, package ggplot2 trong R có thể giúp chúng ta “visualize” một cách dễ dàng và đẹp mắt, hay nói cách khác là biến những con số “khô khan” thành những con số biết nói.</description>
    </item>
    
    <item>
      <title>Xử lý dữ liệu chuỗi với stringr</title>
      <link>/blog/2018/09/02/2018-09-02-xu-ly-du-lieu-chuoi-voi-stringr/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/09/02/2018-09-02-xu-ly-du-lieu-chuoi-voi-stringr/</guid>
      <description>Trong quá trình phân tích dữ liệu, chúng ta sẽ thường gặp phải những vấn đề liên quan đến việc xử lý text. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn sử dụng một số hàm cơ bản trong package stringr để xử lý vấn đề trên.
Stringr packageThông thường, dữ liệu text không phải lúc nào cũng “sạch” do gặp phải những vấn đề khi nhập liệu như: lúc viết hoa, lúc viết thường, thừa nhiều dấu cách, lẫn số hoặc ký tự đặc biệt trong text… Package stringr là 1 trong những package rất hữu dụng trong R để giải quyết những vấn đề trên.</description>
    </item>
    
    <item>
      <title>Xử lý dữ liệu thời gian với lubridate</title>
      <link>/blog/2018/08/27/2018-08-27-xu-ly-du-lieu-thoi-gian-voi-lubridate/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/27/2018-08-27-xu-ly-du-lieu-thoi-gian-voi-lubridate/</guid>
      <description>Trong quá trình phân tích dữ liệu, chúng ta sẽ thường gặp phải những vấn đề liên quan đến việc xử lý các biến date hoặc date-time. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn sử dụng một số hàm cơ bản trong package lubridate để xử lý các biến date và date-time.
Lubridate packageTrong R dữ liệu liên quan đến thời gian có 2 kiểu định dạng:</description>
    </item>
    
    <item>
      <title>Cài đặt RStudio trên Amazon</title>
      <link>/blog/2018/08/25/2018-08-25-cai-dat-rstudio-server-tren-amazon/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/25/2018-08-25-cai-dat-rstudio-server-tren-amazon/</guid>
      <description>Như chúng ta đều biết, R gặp các vấn đề giới hạn của bộ nhớ. Đặc biệt, với các bạn sử dụng Windows, R còn gặp các vấn đề về lỗi font tiếng Việt (encoding). Thêm vào đó, với các bạn muốn sử dụng R trong Deep Learning với CUDA cũng sẽ gặp rất nhiều khó khăn trong việc cài đặt cũng như các vấn đề về chi phí. Sử dụng RStudio online trên Amazon là cách thức hữu hiệu trong giải quyết các vấn đề sau:</description>
    </item>
    
    <item>
      <title>Biểu đồ động với GGPLOT2 và PLOTLY</title>
      <link>/blog/2018/08/20/2018-08-20-bieu-do-dong-voi-ggplot2-va-plotly/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/20/2018-08-20-bieu-do-dong-voi-ggplot2-va-plotly/</guid>
      <description>ggplot2 là package được sử dụng mặc định trong các vấn đề về trực quan hóa dữ liệu với R. Tuy nhiên, ggplot2 chỉ cho phép xây dựng các biểu đồ tĩnh (static plot) mà chưa hỗ trợ các biểu đồ có thể tương tác được với các lựa chọn như hover hay zoom. Hiện nay, có rất nhiều package trên R hỗ trợ biểu đồ tương tác như rCharts, Highcharter hay rbokeh.</description>
    </item>
    
    <item>
      <title>Format dữ liệu trong GGPLOT2 với scales</title>
      <link>/blog/2018/08/17/2018-08-18-format-du-lieu-trong-ggplot2-voi-scales/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/17/2018-08-18-format-du-lieu-trong-ggplot2-voi-scales/</guid>
      <description>Trong quá trình trực quan hóa dữ liệu, chúng ta sẽ thường gặp phải những vấn đề liên quan đến việc format lại dữ liệu để hiển thị tốt nhất. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn sử dụng một package rất hữu hiệu trong việc format lại dữ liệu trên trục biểu đồ là scales. Cách thức format dữ liệu trên biểu đồ trong nội dung bài viết này gồm 4 nhóm chính:</description>
    </item>
    
    <item>
      <title>Xử lý factor với `forcats`</title>
      <link>/blog/2018/08/07/2018-08-07-xu-ly-factor-voi-forcats/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/07/2018-08-07-xu-ly-factor-voi-forcats/</guid>
      <description>Trong quá trình phân tích dữ liệu, chúng ta sẽ thường gặp phải những vấn đề liên quan đến việc xử lý các biến rời rạc (factor/categorical variable). Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn sử dụng một số hàm cơ bản trong package forcats để xử lý các biến rời rạc.
Forcats packagePackage forcats là 1 package rất hữu dụng trong việc xử lý các biến rời rạc có thuộc tính là nhóm (factor) trong R.</description>
    </item>
    
    <item>
      <title>Tùy chỉnh các thành phần cơ bản trong GGPLOT2</title>
      <link>/blog/2018/07/31/2018-07-31-tuy-chinh-cac-thanh-phan-co-ban-trong-ggplot2/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/07/31/2018-07-31-tuy-chinh-cac-thanh-phan-co-ban-trong-ggplot2/</guid>
      <description>Khi mới bắt đầu làm việc với GGPLOT2, sẽ rất khó để có thể tùy chỉnh các thành phần cơ bản trong biểu đồ. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn tùy chỉnh những thành phần cơ bản nhất của biểu đồ với GGPLOT2.
Khi đã tạo được các biểu đồ cơ bản, ta còn cần phải làm chủ được các thành phần khác của biểu đồ, trong đó quan trọng nhất gồm có:</description>
    </item>
    
    <item>
      <title>Viết công thức toán trong rmarkdown</title>
      <link>/blog/2018/07/18/2018-07-21-viet-cong-thuc-toan-trong-rmarkdown/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/07/18/2018-07-21-viet-cong-thuc-toan-trong-rmarkdown/</guid>
      <description>Khi làm việc với rmarkdown và RStudio, ta có thể viết các công thức, ký hiệu toán học một cách rất dễ dàng. Để viết các công thức toán, có hai cách:
Cách 1: Công thức toán nằm trong dấu $ công thức toán $. Khi đó, công thức sẽ hiển thị nằm trên cùng một dòng.Ví dụ: $ y = x^2 $ sẽ hiển thị kết quả là \(y = x^2\)</description>
    </item>
    
    <item>
      <title>Quản lý dự án phân tích trong R với Project</title>
      <link>/blog/2018/07/15/2018-07-15-quan-ly-du-an-phan-tich-trong-r-voi-project/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/07/15/2018-07-15-quan-ly-du-an-phan-tich-trong-r-voi-project/</guid>
      <description>Khi triển khai một dự án phân tích dữ liệu với R, thông thường, chúng ta sẽ cho toàn bộ code, kết quả đầu ra vào một folder chung. Khi đó, ta sẽ phải đổi toàn bộ thư mục làm việc working directory sang địa chỉ của thư mục dự án.
Ví dụ, ta có dự án phân tích marketing đặt trên ổ D với đường dẫn như sau D:\marketing.</description>
    </item>
    
    <item>
      <title>Các phím tắt hữu dụng trong RStudio</title>
      <link>/blog/2018/06/24/2018-06-24-cac-phim-tat-huu-dung-trong-rstudio/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/06/24/2018-06-24-cac-phim-tat-huu-dung-trong-rstudio/</guid>
      <description>Trong quá trình sử dụng R trong phân tích dữ liệu, phần lớn chúng ta đều sẽ sử dụng RStudio là IDE mặc định. Tuy nhiên, đối với các bạn mới bắt đầu, không phải bạn nào cũng biết các phím tắt trong RStudio giúp cho công việc trở nên thuận tiện hơn. Trong bài viết này, Ranalytics.vn sẽ hướng dẫn các bạn một số phím tắt cơ bản hay sử dụng trong Rstudio</description>
    </item>
    
    <item>
      <title>Copy từ clipboard vào R</title>
      <link>/blog/2018/06/22/2018-06-22-copy-tu-clipboard-sang-r/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/06/22/2018-06-22-copy-tu-clipboard-sang-r/</guid>
      <description>Khi làm việc thực tế, không phải lúc nào chúng ta cũng đọc dữ liệu từ 1 file định dạng csv/xlsx vào R. Nhiều khi, để thuận tiện, ta có thể copy clipboard từ excel/csv vào thẳng R. Trong bài viết này Ranalytics sẽ hướng dẫn các bạn copy nhanh từ clipboard vào thẳng môi trường làm việc trong R.
Giả sử ta có 1 bảng dữ liệu từ excel và cần import vào R như sau:</description>
    </item>
    
    <item>
      <title>Import nhiều file cùng lúc vào R</title>
      <link>/blog/2018/06/20/2018-06-20-import-nhieu-file-cung-luc-vao-r/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/06/20/2018-06-20-import-nhieu-file-cung-luc-vao-r/</guid>
      <description>Trong thực tế, khi phân tích dữ liệu, ta thường xuyên phải làm việc với nhiều file có cấu trúc dữ liệu giống nhau được trích xuất từ những khoảng thời gian/đối tượng khác nhau. Khi phân tích, ta phải cùng lúc xử lý rất nhiều những file loại này. Trong blog này, RAnalytics sẽ hướng dẫn các bạn import cùng lúc nhiều file.
Giả sử trong cùng 1 folder, ta có 10 file định dạng csv giống nhau chứa dữ liệu dạng iris như sau:</description>
    </item>
    
    <item>
      <title>Kết nối R với SQLServer</title>
      <link>/blog/2018/06/19/2018-06-19-ket-noi-r-voi-sqlserver/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/06/19/2018-06-19-ket-noi-r-voi-sqlserver/</guid>
      <description>Trong các doanh nghiệp hiện nay, SQLServer vẫn là một trong các database phổ biến nhất hiện nay. Do đó, khi làm việc thực tế, ta cân phải truy cập vào các cơ sở dữ liệu để truy cập dữ liệu phân tích. Trong blog này, mình sẽ hướng dẫn các bạn cách thức kết nối R với SQLServer qua hai bước đơn giản dưới đây:
Bước 1: Tạo kết nối với SQLServer</description>
    </item>
    
    <item>
      <title>Thu gọn giá trị các factor trong biểu đồ</title>
      <link>/blog/2018/04/15/2018-04-15-thu-gon-gia-tri-cac-factor-trong-bieu-do/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/04/15/2018-04-15-thu-gon-gia-tri-cac-factor-trong-bieu-do/</guid>
      <description>Khi vẽ biểu đồ với R, trong một số trường hợp khi tên của factor quá dài, biểu đồ hiển thị ra sẽ không được thẩm mỹ. Xem ví dụ sau:
library(dplyr)library(ggplot2)data &amp;lt;- data.frame(x = c(&amp;quot;Trung tam kinh doanh dien tu dien may va do gia dung&amp;quot;, &amp;quot;Trung tam 2&amp;quot;, &amp;quot;Trung tam kinh doanh my pham va dich vu&amp;quot;),y = c(5,3,7))# Vẽ biểu đồ thông thường, không xử lý với factordata %&amp;gt;% ggplot(aes(x, y)) + geom_bar(stat = &amp;quot;identity&amp;quot;, aes(fill = x)) +theme_bw() +theme(legend.</description>
    </item>
    
    <item>
      <title>Quản lý thư viện trong R hiệu quả</title>
      <link>/blog/2017/09/01/2017-09-01-quan-ly-thu-vien-trong-r-hieu-qua/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017/09/01/2017-09-01-quan-ly-thu-vien-trong-r-hieu-qua/</guid>
      <description>Khi mới bắt đầu sử dụng R, cài đặt và quản lý R có vẻ như chẳng có gì phức tạp cả. Tuy nhiên, mỗi khi cài đặt phiên bản update mới của R, các vấn đề bắt đầu xuất hiện. Trong phần lớn trường hợp, chúng ta phải cài đặt lại các library, việc này đặc biệt tốn thời gian.
Có một cách truyền thông để xử lý vấn đề trên, đó là copy toàn bộ các library cũ vào folder chứa library mới.</description>
    </item>
    
    <item>
      <title>Hướng dẫn cài đặt R &amp; RStudio</title>
      <link>/blog/2017/08/31/2017-08-31-huong-dan-cai-dat-r-va-rstudio/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017/08/31/2017-08-31-huong-dan-cai-dat-r-va-rstudio/</guid>
      <description>Khi bắt đầu học phân tích dữ liệu với R, RStudio là lựa chọn số một về IDE. Tuy nhiên, nhiều bạn chưa phân biệt được R &amp;amp; RStudio như thế nào cũng như cách cài đặt R &amp;amp; RStudio. Trong bài viết này, mình sẽ làm rõ sự khác biệt của R và RStudio cũng như hướng dẫn các bạn cách thức cài đặt hai phần mềm trên.</description>
    </item>
    
    <item>
      <title>Các vị trí công việc trong khoa học dữ liệu</title>
      <link>/blog/2017/01/01/2017-01-01-cac-vi-tri-cong-viec-trong-khoa-hoc-du-lieu/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017/01/01/2017-01-01-cac-vi-tri-cong-viec-trong-khoa-hoc-du-lieu/</guid>
      <description>Trong khoa học dữ liệu, có rất nhiều vị trí khác nhau, không chỉ mỗi phân tích tìm kiếm insights và xây dựng mô hình dự báo. Do các vị trí này đều là những vị trí mới và tạm thời chưa có các thuật ngữ thống nhất ở Việt Nam, mình sẽ tạm dịch các vị trí như dưới đây trong khi giữ nguyên bản gốc tiếng Anh.</description>
    </item>
    
  </channel>
</rss>