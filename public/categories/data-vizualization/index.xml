<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vizualization on Ranalytics.vn - Từ phân tích đến quyết định</title>
    <link>/categories/data-vizualization/</link>
    <description>Recent content in Data Vizualization on Ranalytics.vn - Từ phân tích đến quyết định</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/data-vizualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vẽ biểu đồ động với highcharter</title>
      <link>/blog/2019/08/30/2019-08-30-bieu-do-dong-voi-highcharter/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/08/30/2019-08-30-bieu-do-dong-voi-highcharter/</guid>
      <description>Trong bài viết này, RAnalytics sẽ hướng dẫn các bạn cách vẽ biểu đồ động sử dụng package highcharter.
Chúng ta sẽ sử dụng dữ liệu gapminder trong package gapminder.
# Dữ liệudata(gapminder, package = &amp;quot;gapminder&amp;quot;)library(dplyr)# Summary dữ liệugapminder %&amp;gt;% summary## country continent year lifeExp ## Afghanistan: 12 Africa :624 Min. :1952 Min. :23.60 ## Albania : 12 Americas:300 1st Qu.:1966 1st Qu.</description>
    </item>
    
    <item>
      <title>Sử dụng ggplot2 bằng cách kéo thả</title>
      <link>/blog/2019/08/15/2019-08-15-bi-self-service-ggplot2/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/08/15/2019-08-15-bi-self-service-ggplot2/</guid>
      <description>Ở loạt bài viết trước, chúng ta đã học và sử dụng cách ứng dụng ggplot2 thông qua việc viết các câu lệnh với R.Trong bài viết này, RAnalytics sẽ hướng dẫn các bạn trực quan hóa dữ liệu bằng cách kéo thả trong R bằng việc sử dụng ggplot2 builder addin - esquisse.
Đầu tiên, các bạn cần tải package esquisse về bằng câu lệnh install.packages(&#34;esquisse&#34;).Sau khi đã tải được package trên về, các bạn sử dụng câu lệnh sau: esquisse::esquisser().</description>
    </item>
    
    <item>
      <title>Xây dựng phễu bán hàng với ggplot2</title>
      <link>/blog/2019/06/15/2019-06-15-xay-dung-pheu-ban-hang-voi-ggplot2/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/06/15/2019-06-15-xay-dung-pheu-ban-hang-voi-ggplot2/</guid>
      <description>Trong quá trình phân tích bán hàng, phếu bán hàng (sale funnel) là một kỹ thuật rất hữu dụng để trực quan hóa kết quả kinh doanh theo từng nhóm. Tuy nhiên, hiện ít có biểu đồ nào thể hiện được phễu bán hàng một cách hiệu quả trên R.
Trong bài viết này, RAnalytics sẽ hướng dẫn một ví dụ thực tiễn trực quan hóa phễu bán hàng một cách hiệu quả.</description>
    </item>
    
    <item>
      <title>Tạo biểu đồ cho mô hình với ggfortify</title>
      <link>/blog/2019/04/25/2019-04-20-tao-bieu-do-cho-mo-hinh-voi-ggfortify/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/04/25/2019-04-20-tao-bieu-do-cho-mo-hinh-voi-ggfortify/</guid>
      <description>Khi xây dựng các mô hình đơn giản như hồi quy tuyến tính hoặc chuỗi thời gian ARIMA, các biểu đồ mặc định từ mô hình thường được vẽ với r-base. Do đó, các biểu đồ này thường không được đẹp mắt. Trong bài viết này, RAnalytics sẽ hướng dẫn các bạn sử dụng package ggfortify để trực quan hóa kết quả từ các mô hình.
ggfortify nằm trong hệ sinh thái của ggplot2.</description>
    </item>
    
    <item>
      <title>Cách lưu biểu đồ dưới dạng ảnh</title>
      <link>/blog/2019/03/15/2019-03-15-cach-luu-plot-trong-r/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/03/15/2019-03-15-cach-luu-plot-trong-r/</guid>
      <description>Trong quá trình phân tích dữ liệu sẽ có lúc phát sinh trường hợp các bạn muốn lưu biểu đồ dưới dạng ảnh để sau đó phục vụ mục đích lên slide trình bày với đơn vị kinh doanh hoặc cán bộ quản lý.
Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn cách lưu biểu đồ dưới dạng ảnh trong R.
Giả sử chúng ta vẽ biểu đồ boxplot sử dụng data iris có sẵn trong R như sau:</description>
    </item>
    
    <item>
      <title>Tạo water-fall chart với ggplot2</title>
      <link>/blog/2019/02/25/2019-02-25-vao-water-fall-chart-voi-ggplot2/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/02/25/2019-02-25-vao-water-fall-chart-voi-ggplot2/</guid>
      <description>Trong thế giới công nghệ ngày nay, chỉ số active user là một trong những chỉ số rất quan trọng để thể hiện được hoạt động của một website/app theo thời gian. Active user tại thời điểm t có thể được tính toán như sau.
\[active_{t} = active_{t-1} + new_{t} - churn_{t}\]
Một cách hết sức tự nhiên, biểu đồ water-fall sẽ là biểu đồ được chọn để thể hiện chỉ số quan trọng này.</description>
    </item>
    
    <item>
      <title>Sử dụng facet trong ggplot2</title>
      <link>/blog/2019/02/15/2019-02-15-su-dung-facet-trong-ggplot2/</link>
      <pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/02/15/2019-02-15-su-dung-facet-trong-ggplot2/</guid>
      <description>Sử dụng facet giúp chúng ta có thể chia nhỏ biểu đồ thành một ma trận các biểu đồ nhỏ (a matrix of panels). Mỗi panel sẽ hiển thị các dữ liệu con khác nhau của tập dữ liệu gốc ban đầu.
Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn cách chia nhỏ biểu đồ bằng việc sử dụng facet trong package ggplot2.
Có 2 hàm cơ bản là:</description>
    </item>
    
    <item>
      <title>Vẽ biểu đồ lollipop chart</title>
      <link>/blog/2019/01/10/2019-01-10-ve-bieu-do-lollipop-voi-ggplot2/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/01/10/2019-01-10-ve-bieu-do-lollipop-voi-ggplot2/</guid>
      <description>Trong trực quan hóa dữ liệu, lollipop chart tuy không phải là một trong những biểu đồ phổ biến nhưng lại rất hiệu quả khi muốn thể hiện sự dịch thay đổi của một chỉ số giữa hai điểm thời gian. Trong bài viết này, RAnalytics sẽ hướng dẫn các bạn cách xây dựng biểu đồ lollipop chart với ggplot2.
# Load librarylibrary(tidyverse)library(gapminder)Để xây dựng biểu đồ, ta sử dụng dữ liệu gapminder từ tập dữ liệu gapminder.</description>
    </item>
    
    <item>
      <title>Tạo bản đồ với ggplot2</title>
      <link>/blog/2018/11/01/2018-11-01-tao-ban-do-voi-ggplot2/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/11/01/2018-11-01-tao-ban-do-voi-ggplot2/</guid>
      <description>Giới thiệuKhi phân tích dữ liệu, xây dựng bản đồ là một trong những công cụ rất mạnh giúp cho việc trực quan hóa, đặc biệt trong lĩnh vực kinh doanh, marketing. Việc xây dựng bản đồ giúp truyền tài kết quả phân tích một cách nhanh chóng và hiệu quả.
Với cách làm truyền thống, việc xây dựng bản đồ là không hề dễ dàng. Các packages như sp, sf hay tmap đều rất mạnh trong vẽ biểu đồ.</description>
    </item>
    
    <item>
      <title>Tạo wordcloud với ggplot2</title>
      <link>/blog/2018/10/01/2018-10-01-tao-wordcloud-voi-ggplot2/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/10/01/2018-10-01-tao-wordcloud-voi-ggplot2/</guid>
      <description>Khi phân tích dữ liệu, một trong những định dang dữ liệu chúng ta thường xuyên phải sử dụng là định dạng text. Với loại dữ liệu này, một trong những cách để trực quan hóa hiệu quả là sử dụng wordcloud. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn tạo wordcloud nhanh chóng theo phong cách của tidyverse với package ggwordcloud - một package mới trong hệ sinh thái của R.</description>
    </item>
    
    <item>
      <title>Vẽ biểu đồ boxplot hiệu quả với GGPLOT2</title>
      <link>/blog/2018/09/14/2018-09-16-tips-ggplot2/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/09/14/2018-09-16-tips-ggplot2/</guid>
      <description>Trong quá trình phân tích dữ liệu, ngoài việc đưa ra những con số thống kê “khô khan” chúng ta cần phải minh họa những con số bằng những hình vẽ hoặc biểu đồ để thu hút người đọc khi trình bày với đơn vị kinh doanh hay đối tác.
Như các bạn đã biết, package ggplot2 trong R có thể giúp chúng ta “visualize” một cách dễ dàng và đẹp mắt, hay nói cách khác là biến những con số “khô khan” thành những con số biết nói.</description>
    </item>
    
    <item>
      <title>Biểu đồ động với GGPLOT2 và PLOTLY</title>
      <link>/blog/2018/08/20/2018-08-20-bieu-do-dong-voi-ggplot2-va-plotly/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/20/2018-08-20-bieu-do-dong-voi-ggplot2-va-plotly/</guid>
      <description>ggplot2 là package được sử dụng mặc định trong các vấn đề về trực quan hóa dữ liệu với R. Tuy nhiên, ggplot2 chỉ cho phép xây dựng các biểu đồ tĩnh (static plot) mà chưa hỗ trợ các biểu đồ có thể tương tác được với các lựa chọn như hover hay zoom. Hiện nay, có rất nhiều package trên R hỗ trợ biểu đồ tương tác như rCharts, Highcharter hay rbokeh.</description>
    </item>
    
    <item>
      <title>Format dữ liệu trong GGPLOT2 với scales</title>
      <link>/blog/2018/08/17/2018-08-18-format-du-lieu-trong-ggplot2-voi-scales/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/08/17/2018-08-18-format-du-lieu-trong-ggplot2-voi-scales/</guid>
      <description>Trong quá trình trực quan hóa dữ liệu, chúng ta sẽ thường gặp phải những vấn đề liên quan đến việc format lại dữ liệu để hiển thị tốt nhất. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn sử dụng một package rất hữu hiệu trong việc format lại dữ liệu trên trục biểu đồ là scales. Cách thức format dữ liệu trên biểu đồ trong nội dung bài viết này gồm 4 nhóm chính:</description>
    </item>
    
    <item>
      <title>Tùy chỉnh các thành phần cơ bản trong GGPLOT2</title>
      <link>/blog/2018/07/31/2018-07-31-tuy-chinh-cac-thanh-phan-co-ban-trong-ggplot2/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/07/31/2018-07-31-tuy-chinh-cac-thanh-phan-co-ban-trong-ggplot2/</guid>
      <description>Khi mới bắt đầu làm việc với GGPLOT2, sẽ rất khó để có thể tùy chỉnh các thành phần cơ bản trong biểu đồ. Trong bài viết này, Ranalytics sẽ hướng dẫn các bạn tùy chỉnh những thành phần cơ bản nhất của biểu đồ với GGPLOT2.
Khi đã tạo được các biểu đồ cơ bản, ta còn cần phải làm chủ được các thành phần khác của biểu đồ, trong đó quan trọng nhất gồm có:</description>
    </item>
    
    <item>
      <title>Thu gọn giá trị các factor trong biểu đồ</title>
      <link>/blog/2018/04/15/2018-04-15-thu-gon-gia-tri-cac-factor-trong-bieu-do/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/04/15/2018-04-15-thu-gon-gia-tri-cac-factor-trong-bieu-do/</guid>
      <description>Khi vẽ biểu đồ với R, trong một số trường hợp khi tên của factor quá dài, biểu đồ hiển thị ra sẽ không được thẩm mỹ. Xem ví dụ sau:
library(dplyr)library(ggplot2)data &amp;lt;- data.frame(x = c(&amp;quot;Trung tam kinh doanh dien tu dien may va do gia dung&amp;quot;, &amp;quot;Trung tam 2&amp;quot;, &amp;quot;Trung tam kinh doanh my pham va dich vu&amp;quot;),y = c(5,3,7))# Vẽ biểu đồ thông thường, không xử lý với factordata %&amp;gt;% ggplot(aes(x, y)) + geom_bar(stat = &amp;quot;identity&amp;quot;, aes(fill = x)) +theme_bw() +theme(legend.</description>
    </item>
    
  </channel>
</rss>